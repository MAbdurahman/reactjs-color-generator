{"version":3,"sources":["utils/utils.js","components/colors/SingleColor.jsx","app/App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAA,SAASA,EAAeC,GACvB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAIE,OAAe,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACvB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,I,OCyBtDC,EA5BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC/BC,oBAAS,GADsB,mBAClDC,EADkD,KAC3CC,EAD2C,KAEnDC,EAAMP,EAAIQ,KAAK,KAGfC,GADMd,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAOrB,OANAO,qBAAU,WACT,IAAMC,EAAUC,YAAW,WAC1BN,GAAS,KACP,KACH,OAAO,kBAAMO,aAAaF,MACxB,CAACN,IAEH,0BACCS,UAAS,gBAAWZ,EAAQ,IAAM,eAClCa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACxBU,QAAS,WACRX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IALhC,UAQC,oBAAGK,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,mBAAGa,UAAU,cAAb,SAA4BL,IAC3BJ,GAAS,mBAAGS,UAAU,QAAb,qCCtBE,SAASO,IAAM,MAEHjB,mBAAS,IAFN,mBAEtBkB,EAFsB,KAEfC,EAFe,OAGHnB,oBAAS,GAHN,mBAGtBoB,EAHsB,KAGfC,EAHe,OAILrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAJ9B,mBAItBC,EAJsB,KAIhBC,EAJgB,KAoB7B,OACC,qCACC,0BAASf,UAAU,YAAnB,UACC,iDACA,uBAAMgB,SAlBY,SAAAC,GACpBA,EAAEC,iBACF,IACC,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACP,MAAOT,GACFZ,YAAW,WACRa,GAAS,KAET,KACTA,GAAS,GACTS,QAAQC,IAAIX,KAOX,UACC,uBACCY,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAAAP,GAAC,OAAIR,EAASQ,EAAEQ,OAAOF,QACjCG,YAAY,UACZ1B,UAAS,UAAKU,EAAQ,QAAU,QAEjC,wBAAQV,UAAU,MAAMsB,KAAK,SAA7B,0BAKF,yBAAStB,UAAU,SAAnB,SACEc,EAAKa,KAAI,SAACnB,EAAOpB,GACjB,OACC,cAAC,EAAD,2BAEKoB,GAFL,IAGCpB,MAAOA,EACPC,SAAUmB,EAAM9B,MAHXU,WCxCZwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.4dd2df49.chunk.js","sourcesContent":["function componentToHex(c) {\r\n\tvar hex = c.toString(16);\r\n\treturn hex.length === 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react';\r\nimport rgbToHex from './../../utils/utils';\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n\tconst [alert, setAlert] = useState(false);\r\n\tconst bcg = rgb.join(',');\r\n\t// eslint-disable-next-line \r\n\tconst hex = rgbToHex(...rgb);\r\n\tconst hexValue = `#${hexColor}`;\r\n\tuseEffect(() => {\r\n\t\tconst timeout = setTimeout(() => {\r\n\t\t\tsetAlert(false);\r\n\t\t}, 3000);\r\n\t\treturn () => clearTimeout(timeout);\r\n\t}, [alert]);\r\n\treturn (\r\n\t\t<article\r\n\t\t\tclassName={`color ${index > 10 && 'color-light'}`}\r\n\t\t\tstyle={{ backgroundColor: `rgb(${bcg})` }}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetAlert(true);\r\n\t\t\t\tnavigator.clipboard.writeText(hexValue);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<p className='percent-value'>{weight}%</p>\r\n\t\t\t<p className='color-value'>{hexValue}</p>\r\n\t\t\t{alert && <p className='alert'>copied to clipboard</p>}\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default SingleColor;\r\n","import React, { useState } from 'react';\r\nimport Values from 'values.js';\r\nimport SingleColor from './../components/colors/SingleColor';\r\n\r\nexport default function App() {\r\n\t//**************** variables ****************//\r\n\tconst [color, setColor] = useState('');\r\n\tconst [error, setError] = useState(false);\r\n\tconst [list, setList] = useState(new Values('#d3d3d3').all(10));\r\n\t//**************** functions ****************//\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tlet colors = new Values(color).all(10);\r\n\t\t\tsetList(colors);\r\n\t\t} catch (error) {\r\n         setTimeout(() => {\r\n            setError(false);\r\n      \r\n         }, 3000);\r\n\t\t\tsetError(true);\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className='container'>\r\n\t\t\t\t<h3>color generator</h3>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={color}\r\n\t\t\t\t\t\tonChange={e => setColor(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='#d3d3d3'\r\n\t\t\t\t\t\tclassName={`${error ? 'error' : null}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\tsubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</section>\r\n\t\t\t<section className='colors'>\r\n\t\t\t\t{list.map((color, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<SingleColor\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t{...color}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\thexColor={color.hex}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}